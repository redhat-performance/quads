##
# This is the main configuration file for QUADS
# Configure for your environment

# spare pool name. e.g. where your unused systems rest
spare_pool_name: cloud01

install_dir: /opt/quads
#data_dir: /opt/quads/data
data_dir: .
# display name for QUADS email notifications
mail_display_name: "QUADS Scheduler"
# set header for User-Agent:
mail_user_agent: "Rufus Postman 1.0.99"
domain: example.com
log: /opt/quads/log/quads.log
quads_base_url: http://127.0.0.1:8080/

# Enable Elasticsearch indexing
elastic_stats_enabled: false
elastic_host: localhost
elastic_port: 9200

# used for reporting
# add your email here to receive copies of notification emails
report_cc: someuser@example.com, someuser@example.com, someuser@example.com, someuser@example.com

# notification options
# location for notification stub files
# these are markers that track notification send status
report_dir: /opt/quads/data/report

# set to true to receive notifications when:
# 1) upon cloud definition for a future workload
# 2) upon passing of validated tests
# 3) 1,3,5,7 days out from when assignment ends
email_notify: true

## email server settings
# this is for your mail relay host
# in containers we use the docker container host itself, you should
# change this to localhost if you want to use the mail relay on the localhost
# and you're not running quads in containers
email_host: 172.16.0.1

# * Note* you'll need Supybot with the notify plugin
# these setting use netcat to send messages to Supybot
irc_notify: true
ircbot_ipaddr: 192.168.0.100
ircbot_port: 5050
ircbot_channel: #yourchannel

# wordpress wiki
wp_wiki: http://wiki.example.com/xmlrpc.php
wp_username: wikiadmin
wp_password: wikipassword

# you will have to know your wordpress page ID for the main and assignment pages
wp_wiki_main_title: Lab Dashboard
wp_wiki_main_page_id: 4
wp_wiki_assignments_title: assignments
wp_wiki_assignments_page_id: 357
# these values are used for auto-generation of a VLAN wiki page markdown
# when routable public VLANs are required (--vlan)
wp_wiki_vlans_title: Public VLAN Allocations
wp_wiki_vlans_page_id: 14244
# optional management of wordpress content via git repo
wp_wiki_git_manage: false
wp_wiki_git_repo_path: /opt/quads/git/wiki

# (optional RT location)
rt_url: https://engineering.example.com/rt/Ticket/Display.html

# this is used in some of the wiki generate for the links
quads_url: http://quads.scalelab.example.com

# Foreman Specific Variables
# foreman URL
foreman_url: http://foreman.example.com/hosts/
foreman_api_url: https://foreman.example.com/api/v2
foreman_username: admin
foreman_password: password

foreman_default_os: "RHEL 7"
foreman_default_ptable: "generic-rhel7"
foreman_default_medium: "RHEL Local"

# Foreman host health checks
# by setting the Foreman host parameter: broken_state: true
# you can mark certain systems as broken and keep them from being scheduled
# e.g.  hammer host set-parameter --host host01 --name broken_state --value true
# set the following variable to true if you want this functionality
foreman_check_host_health:

# omit these hosts (used for wiki generation)
# These are typically hosts known to your foreman that you don't
# want to pull into the wiki. (this is a regexp, e.g. 'host1|host2'
exclude_hosts: cyclades|s4810|z9000|5548|foreman|c08-h30-r630|c08-h05-r930|b08-|e05-h25|zfs01

# Foreman naming convention is <rack>-<u-location>-<type>
# e.g. c01-h23-r620 is an r620 type host in rack c01 at u-location 23
racks: b09 b10 c01 c02 c03 c04 c05 c06 c07 c08 c09 c10

# this is where we place the generated instackenv.json files
json_web_path: /var/www/html/cloud

# Whether or not you want the QUADS host to gather and display ansible facts in
# an HTMl page, you need ansible-cmdb rpm for this functionality which can be
# got from https://github.com/fboender/ansible-cmdb/releases
gather_ansible_facts: false

# Whether or not you want the QUADS host to gather and display dell configs
# in an HTML page.  This is done over ssh using racadm commands. This presumes
# a particular hostname convention that splits your hosts into three elements:
# e.g. <rack>-<location>-<hosttype>.<yourdomain>, where hosttype is what is
# checked against several Dell types.  Be careful as this is environment specific
# and may not work in all environments.  Default is false.
gather_dell_configs: false

# this is where we place the generated ansible configuration management database
# html
ansible_facts_web_path: /var/www/html/ansible_facts


# untouchable_hosts are hosts that should be avoided by QUADS in any way.
# use this to define hosts QUADS should never move.
untouchable_hosts: foreman.example.com c08-h30-r630.example.com

# phpical
phpical_dir: /srv/cal

# ipmi QUADS admin user/pass
# this is the IPMI account QUADS uses
ipmi_username: root
ipmi_password: password
# ipmi user account
# this is the account you create for users
# to interact with the ipmi
ipmi_cloud_username: quads
ipmi_cloud_password: password
ipmi_cloud_username_id: 4

# This stores the username for connecting to junos switches
junos_username: scaleadmin

# visual web dir is where the visual HTML representation of the lab usage goes
visual_web_dir: /var/www/html/visual

# Note: for nested yaml, two spaces must be used
# for the next level of key/value pairs.
# If the value is 3 numeric values, they are RGB values
# If the first number is -1 then the 2nd value is the name
# of the image file in the visual_web_dir
visual_colors:
  cloud01: "#000000"
  cloud02: "#222034"
  cloud03: "#45283c"
  cloud04: "#663931"
  cloud05: "#8f563b"
  cloud06: "#df7126"
  cloud07: "#d9a066"
  cloud08: "#eec39a"
  cloud09: "#fbf236"
  cloud10: "#99e550"
  cloud11: "#6abe30"
  cloud12: "#37946e"
  cloud13: "#4b692f"
  cloud14: "#524b24"
  cloud15: "#323c39"
  cloud16: "#3f3f74"
  cloud17: "#306082"
  cloud18: "#5b6ee1"
  cloud19: "#639bff"
  cloud20: "#5fcde4"
  cloud21: "#cbdbfc"
  cloud22: "#ffffff"
  cloud23: "#9badb7"
  cloud24: "#847e87"
  cloud25: "#696a6a"
  cloud26: "#595652"
  cloud27: "#76428a"
  cloud28: "#ac3232"
  cloud29: "#d95763"
  cloud30: "#d77bba"
  cloud31: "#8f974a"
  cloud32: "#8a6f30"

# parameter to designate "undercloud" (ignored) hosts
# for overcloud instackenv.json generation as well as
# pxe boot selection
# if nullos is set to true: PXE flag removed for Foreman
# and the host can be part of an overcloud/instackenv.json
# if nullos is set to false: machine still foreman provisionable
# and is excluded from instackenv.json.  It can then be
# either used as an undercloud or something else and the
# traditional default 1st host in an assignment is put back
# in the pile and included in instackenv.json
foreman_director_parameter: nullos

# ansible boot order playbook settings
# this determines maximum number of running ansible-playbook
# processes.  We use ansible for toggling PXE and boot order
# on Dell servers via racadm specifically for accomodating
# OpenStack # Director-deployed machines but
# this isn't used for other purposes.
ansible_max_proc: 60

# Do you have managed PDUs?
pdu_management: false
