##
# This is the main configuration file for QUADS
# Configure for your environment

# spare pool name. e.g. where your unused systems rest
spare_pool_name: cloud01

install_dir: /opt/quads
data_dir: /opt/quads/data
domain: example.com
log: /opt/quads/log/quads.log
quads_base_url: http://127.0.0.1:8080/

# Enable Elasticsearch indexing
elastic_stats_enabled: false
elastic_host: localhost
elastic_port: 9200

# used for reporting
report_cc: someuser@example.com, someuser@example.com, someuser@example.com, someuser@example.com

# notification options
# set to true to receive notifications when:
# 1) upon systems assignment
# 2) 1,3,5,7 days out from when assignment ends
email_notify: true
# set to true to receive notifications when:
# 1) upon systems assignment
# * Note* you'll need Supybot with the notify plugin
irc_notify: true
ircbot_ipaddr: 192.168.0.100
ircbot_port: 5050
ircbot_channel: #yourchannel

# wordpress wiki
wp_wiki: wiki.example.com
wp_username: wikiadmin
wp_password: wikipassword

# you will have to know your wordpress page ID for the main and assignment pages
wp_wiki_main_title: Lab Dashboard
wp_wiki_main_page_id: 4
wp_wiki_assignments_title: assignments
wp_wiki_assignments_page_id: 357
# optional management of wordpress content via git repo
wp_wiki_git_manage: false
wp_wiki_git_repo_path: /opt/quads/git/wiki

# (optional RT location)
rt_url: https://engineering.example.com/rt/Ticket/Display.html

# this is used in some of the wiki generate for the links
quads_url: http://quads.scalelab.example.com

# foreman URL
foreman_url: http://foreman.example.com/hosts/
foreman_api_url: https://foreman.example.com/api/v2
foreman_username: admin
foreman_password: password
# set this to true if you want to check Foreman for faulty hosts
# prior to scheduling e.g. --add-schedule.  Requires host parameter of
# "broken_state: true/false" for each QUADS-managed host
foreman_check_host_health: false

# omit these hosts (used for wiki generation)
# These are typically hosts known to your foreman that you don't
# want to pull into the wiki. (this is a regexp, e.g. 'host1|host2'
exclude_hosts: cyclades|s4810|z9000|5548|foreman|c08-h30-r630|c08-h05-r930|b08-|e05-h25|zfs01

# Foreman naming convention is <rack>-<u-location>-<type>
# e.g. c01-h23-r620 is an r620 type host in rack c01 at u-location 23
racks: b09 b10 c01 c02 c03 c04 c05 c06 c07 c08 c09 c10

# this is where we place the generated instackenv.json files
json_web_path: /var/www/html/cloud

# Whether or not you want the QUADS host to gather and display ansible facts in
# an HTMl page, you need ansible-cmdb rpm for this functionality which can be
# got from https://github.com/fboender/ansible-cmdb/releases
gather_ansible_facts: false

# Whether or not you want the QUADS host to gather and display dell configs
# in an HTML page.  This is done over ssh using racadm commands. This presumes
# a particular hostname convention that splits your hosts into three elements:
# e.g. <rack>-<location>-<hosttype>.<yourdomain>, where hosttype is what is
# checked against several Dell types.  Be careful as this is environment specific
# and may not work in all environments.  Default is false.
gather_dell_configs: false

# this is where we place the generated ansible configuration management database
# html
ansible_facts_web_path: /var/www/html/ansible_facts


# untouchable_hosts are hosts that should be avoided by QUADS in any way.
# use this to define hosts QUADS should never move.
untouchable_hosts: foreman.example.com c08-h30-r630.example.com

# phpical
phpical_dir: /srv/cal
ical_web_location: /var/www/html/ical/schedule.ics

# ipmi QUADS admin user/pass
# this is the IPMI account QUADS uses
ipmi_username: root
ipmi_password: password
# ipmi user account
# this is the account you create for users
# to interact with the ipmi
ipmi_cloud_username: quads
ipmi_cloud_password: password
ipmi_cloud_username_id: 4

# visual web dir is where the visual HTML representation of the lab usage goes
visual_web_dir: /var/www/html/visual

# Note: for nested yaml, two spaces must be used
# for the next level of key/value pairs.
# If the value is 3 numeric values, they are RGB values
# If the first number is -1 then the 2nd value is the name
# of the image file in the visual_web_dir
visual_colors:
  cloud01: 190 193 212
  cloud02: -1 button01.png
  cloud03: -1 button02.png
  cloud04: -1 button03.png
  cloud05: -1 button04.png
  cloud06: -1 button05.png
  cloud07: -1 button06.png
  cloud08: -1 button07.png
  cloud09: -1 button08.png
  cloud10: -1 button09.png
  cloud11: -1 button10.png
  cloud12: -1 button11.png
  cloud13: -1 button12.png
  cloud14: -1 button13.png
  cloud15: -1 button14.png
  cloud16: -1 button15.png
  cloud17: -1 button16.png
  cloud18: -1 button17.png
  cloud19: -1 button18.png
  cloud20: -1 button19.png 0
  cloud21: -1 texture03.png 0
  cloud22: -1 texture04.png 0
  cloud23: -1 texture05.png 0
  cloud24: -1 texture06.png 0
  cloud25: -1 texture07.png 0
  cloud26: -1 texture08.png 0
  cloud27: -1 texture09.png 0
  cloud28: -1 texture10.png 0
  cloud29: -1 texture11.png 0
  cloud30: -1 texture12.png 0
  cloud31: -1 texture13.png 0
  cloud32: -1 texture14.png 0

# parameter to designate "undercloud" (ignored) hosts
# for overcloud instackenv.json generation as well as
# pxe boot selection
# if nullos is set to true: PXE flag removed for Foreman
# and the host can be part of an overcloud/instackenv.json
# if nullos is set to false: machine still foreman provisionable
# and is excluded from instackenv.json.  It can then be
# either used as an undercloud or something else and the
# traditional default 1st host in an assignment is put back
# in the pile and included in instackenv.json
foreman_director_parameter: nullos

# ansible boot order playbook settings
# this determines maximum number of running ansible-playbook
# processes.  We use ansible for toggling PXE and boot order
# on Dell servers via racadm specifically for accomodating
# OpenStack # Director-deployed machines but
# this isn't used for other purposes.
ansible_max_proc: 60

# Do you have managed PDUs?
pdu_management: false
